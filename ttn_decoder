var hexChar = ["0", "1", "2", "3", "4", "5", "6", "7","8", "9", "A", "B", "C", "D", "E", "F"];

function byteToHex(b) {

 return hexChar[(b >> 4) & 0x0f] + hexChar[b & 0x0f];

}

function hexToInt(hex) {

 var num=hex;

 if (num>0x7F) {

   num=num-0x100;

 }

 return num;

}
function Decoder(bytes)
{
 if (port == 1)
{
  var decode4 = {};
    decode4.voltage = ((bytes[2]<<8 | bytes[3]));
    decode4.distance = ((bytes[5]<<8 | bytes[6]));
    return decode4;
}
 if (port == 66)
{
	var unique_id;
  var room_number;
	var mode = bytes[0];

  if (mode < 2)
  {
    var mac1 = "";
  	for (i = 1; i < 7; i++)
  	{
  		mac1 += byteToHex(bytes[i]);
  		if (i < 6)
  		{
  			mac1 += ':';
  		}
  	}
  
  	var rssi1 = hexToInt(bytes[7]);
  	var mac2 = "";

		for (i = 1; i < 7; i++)
		{
			mac2 += byteToHex(bytes[i +  7]);
  
			if (i < 6)
			{
			  mac2 += ':';
  		}
  	}
  
  	var rssi2 = hexToInt(bytes[14]);		
  	unique_id = hexToInt(bytes[15]);
  	room_number = hexToInt(bytes[16]);
  }
  else {
    var lat = (bytes[1] | bytes[2]<<8 | bytes[3]<<16 | (bytes[3] & 0x80 ? 0xFF<<24 : 0)) / 10000;
    var lng = (bytes[4] | bytes[5]<<8 | bytes[6]<<16 | (bytes[6] & 0x80 ? 0xFF<<24 : 0)) / 10000;
    unique_id = hexToInt(bytes[7]);
    room_number = hexToInt(bytes[8]);
  }

	return {
		macaddress:
		{
		  mode: mode,
			mac_1: mac1,
			rssi_1: rssi1,
			mac_2: mac2,
			rssi_2: rssi2,
			latitude: lat,
		  longitude: lng,
			device_id: unique_id,
			room: room_number
		},
	};
}
	
  /*
  if (port == 77)
  {
    var decoded = {};
    decoded.distance = (bytes[1]<<8 | bytes[0])
    return decoded;
  }*/
}
